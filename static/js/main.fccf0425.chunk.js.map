{"version":3,"sources":["serviceWorker.js","pages/Home.js","App.js","reducers/index.js","index.js"],"names":["Boolean","window","location","hostname","match","Home","props","useState","total","device","setDevice","handleBtnShow","innerWidth","useEffect","addEventListener","removeEventListener","$","click","addClass","className","Button","variant","size","onClick","toggleClass","App","basename","process","exact","path","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fccf0425.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport $ from 'jquery'\nimport { Button } from 'react-bootstrap'\nimport Draggable from 'react-draggable'\n//redux\nimport { connect } from 'react-redux'\n//action\nimport { bindActionCreators } from 'redux'\n//引入自己的css\nimport '../css/home.scss'\nfunction Home(props) {\n  //設定計算機初始值\n  const [total, setTotal] = useState(0)\n\n  //設定按鈕顯示\n  const [device, setDevice] = useState('')\n\n  //偵測視窗顯示文字\n  const handleBtnShow = function () {\n    if (window.innerWidth > 768) setDevice('Computer')\n    else if (window.innerWidth > 576) setDevice('Computer')\n    else setDevice('Mobile')\n  }\n  useEffect(() => {\n    window.addEventListener('resize', handleBtnShow)\n    handleBtnShow()\n    return () => {\n      window.removeEventListener('resize', handleBtnShow)\n    }\n  }, [])\n\n  //開手機版計算機\n  const handleCalShow = function () {\n    $('.calculator_mobile').toggleClass('d-none')\n    $('.calculator_computer').addClass('d-none')\n  }\n  //關手機版計算機\n  useEffect(() => {\n    $('.home_helf').click(function () {\n      $('.calculator_mobile').addClass('d-none')\n    })\n  }, [])\n\n  //開電腦版計算機\n  const handleComShow = function () {\n    $('.calculator_computer').toggleClass('d-none')\n    $('.calculator_mobile').addClass('d-none')\n  }\n\n  //關電腦版計算機\n  // useEffect(() => {\n  //   $('.home').click(function () {\n  //     $('.calculator_computer').addClass('d-none')\n  //   })\n  // }, [])\n\n  return (\n    <>\n      <div className=\"home\">\n        {device === 'Computer' ? (\n          <Button variant=\"primary\" size=\"lg\" onClick={handleComShow}>\n            {device}\n          </Button>\n        ) : (\n          <Button variant=\"secondary\" size=\"lg\" onClick={handleCalShow}>\n            {device}\n          </Button>\n        )}\n        <Draggable>\n          <div className=\"calculator_computer\">\n            <div className=\"wrapper\">\n              <div className=\"row\">\n                <div className=\"total\">{total}</div>\n              </div>\n              <div className=\"row mt-2\">\n                <div className=\"row_flex\">\n                  <div className=\"circle symbol_grey\">AC</div>\n                  <div className=\"circle symbol_grey\">+/-</div>\n                  <div className=\"circle symbol_grey\">%</div>\n                  <div className=\"circle symbol_blue\">&divide;</div>\n                </div>\n              </div>\n              <div className=\"row mt-2\">\n                <div className=\"row_flex\">\n                  <div className=\"circle num\">7</div>\n                  <div className=\"circle num\">8</div>\n                  <div className=\"circle num\">9</div>\n                  <div className=\"circle symbol_blue\">&times;</div>\n                </div>\n              </div>\n              <div className=\"row mt-2\">\n                <div className=\"row_flex\">\n                  <div className=\"circle num\">4</div>\n                  <div className=\"circle num\">5</div>\n                  <div className=\"circle num\">6</div>\n                  <div className=\"circle symbol_blue\">&minus;</div>\n                </div>\n              </div>\n              <div className=\"row mt-2\">\n                <div className=\"row_flex\">\n                  <div className=\"circle num\">1</div>\n                  <div className=\"circle num\">2</div>\n                  <div className=\"circle num\">3</div>\n                  <div className=\"circle symbol_blue\">+</div>\n                </div>\n              </div>\n              <div className=\"row mt-2\">\n                <div className=\"row_flex\">\n                  <div className=\"ellipse num\">0</div>\n                  <div className=\"circle num\">.</div>\n                  <div className=\"circle symbol_blue\">=</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Draggable>\n        <div className=\"home_helf\"></div>\n        <div className=\"calculator_mobile d-none\">\n          <div className=\"wrapper\">\n            <div className=\"row\">\n              <div className=\"total\">{total}</div>\n            </div>\n            <div className=\"row mt-2\">\n              <div className=\"row_flex\">\n                <div className=\"circle symbol_grey\">AC</div>\n                <div className=\"circle symbol_grey\">+/-</div>\n                <div className=\"circle symbol_grey\">%</div>\n                <div className=\"circle symbol_blue\">&divide;</div>\n              </div>\n            </div>\n            <div className=\"row mt-2\">\n              <div className=\"row_flex\">\n                <div className=\"circle num\">7</div>\n                <div className=\"circle num\">8</div>\n                <div className=\"circle num\">9</div>\n                <div className=\"circle symbol_blue\">&times;</div>\n              </div>\n            </div>\n            <div className=\"row mt-2\">\n              <div className=\"row_flex\">\n                <div className=\"circle num\">4</div>\n                <div className=\"circle num\">5</div>\n                <div className=\"circle num\">6</div>\n                <div className=\"circle symbol_blue\">&minus;</div>\n              </div>\n            </div>\n            <div className=\"row mt-2\">\n              <div className=\"row_flex\">\n                <div className=\"circle num\">1</div>\n                <div className=\"circle num\">2</div>\n                <div className=\"circle num\">3</div>\n                <div className=\"circle symbol_blue\">+</div>\n              </div>\n            </div>\n            <div className=\"row mt-2\">\n              <div className=\"row_flex\">\n                <div className=\"ellipse num\">0</div>\n                <div className=\"circle num\">.</div>\n                <div className=\"circle symbol_blue\">=</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\nexport default Home\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Home from './pages/Home'\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </>\n    </Router>\n  )\n}\n\nexport default App\n","import { combineReducers } from 'redux'\n\nconst rootReducer = combineReducers({})\n\nexport { rootReducer }\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\n//載入react bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App'\n//使用redux\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport { rootReducer } from './reducers/index'\n//使用瀏覽器擴充功能\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n//建立store儲存reducer與其儲存的state\nconst store = createStore(\n  rootReducer,\n  /* preloadedState, */ composeEnhancers(applyMiddleware(thunk))\n)\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}