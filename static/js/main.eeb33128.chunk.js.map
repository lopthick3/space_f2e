{"version":3,"sources":["reducers/reducers.js","actions/actionTypes.js","serviceWorker.js","containers/viewNumber.js","actions/actions.js","components/button.js","containers/clickBtn.js","pages/Home.js","App.js","index.js"],"names":["initState","frontNum","backNum","countType","calculateNumber","state","answer","calculateReducer","combineReducers","calculator","action","type","Object","assign","num","Boolean","window","location","hostname","match","ViewNumber","connect","className","addNumber","subNumber","resetNumber","countNumber","inputNumber","BtnFunc","text","onClick","ClickBtn","dispatch","inputNum","actions","addNum","subNum","countNum","resetNum","e","preventDefault","store","bindActionCreators","props","useState","device","setDevice","handleBtnShow","innerWidth","console","log","useEffect","addEventListener","removeEventListener","$","click","addClass","Button","variant","size","toggleClass","App","basename","process","exact","path","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.eeb33128.chunk.js","sourcesContent":["import { combineReducers } from 'redux'\nimport * as actionTypes from '../actions/actionTypes'\n\nconst initState = {\n  frontNum: 0, // 被加數、被減數\n  backNum: 0, // 加數、減數\n  countType: null, // 運算方式\n}\n\n// 按下等於後的計算\nconst calculateNumber = (state) => {\n  let answer = 0\n  switch (state.countType) {\n    case actionTypes.ADD:\n      answer = state.frontNum + state.backNum\n      break\n    case actionTypes.SUB:\n      answer = state.frontNum - state.backNum\n      break\n    default:\n      answer = 0\n  }\n  return answer\n}\nconst calculator = (state = initState, action) => {\n  switch (action.type) {\n    // 輸入數字\n    case actionTypes.NUM:\n      return Object.assign({}, state, {\n        backNum: state.backNum * 10 + action.num,\n      })\n    // 輸入加減乘除\n    case actionTypes.ADD:\n    case actionTypes.SUB:\n      return {\n        frontNum: state.backNum,\n        backNum: 0,\n        countType: action.type,\n      }\n    // 重置數字\n    case actionTypes.RESET:\n      return Object.assign({}, state, {\n        frontNum: 0,\n        backNum: 0,\n        countType: null,\n      })\n    // 按下等於\n    case actionTypes.CALCULATE:\n      return Object.assign({}, state, {\n        frontNum: 0,\n        backNum: calculateNumber(state),\n        countType: null,\n      })\n    default:\n      return state\n  }\n}\n\nconst calculateReducer = combineReducers({\n  calculator,\n})\n\nexport default calculateReducer\n","export const ADD = 'ADD' // 加\nexport const SUB = 'SUB' // 減\nexport const RESET = 'RESET' // 歸零\nexport const CALCULATE = 'CALCULATE' // 計算\nexport const NUM = 'NUM' // 輸入數字\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nconst NumberBlock = ({ num }) => (\n  <div className=\"row\">\n    <div className=\"total\">{num}</div>\n  </div>\n)\n\n// 回傳需要顯示的資料。\nconst mapStateToProps = (state) => ({\n  num: state.calculator.backNum,\n})\n\nNumberBlock.propTypes = {\n  num: PropTypes.number.isRequired,\n}\n\nconst ViewNumber = connect(mapStateToProps)(NumberBlock)\n\nexport default ViewNumber\n","import * as actionTypes from './actionTypes'\n\nexport const addNumber = () => ({ type: actionTypes.ADD })\n\nexport const subNumber = () => ({ type: actionTypes.SUB })\n\nexport const resetNumber = () => ({ type: actionTypes.RESET })\n\nexport const countNumber = () => ({ type: actionTypes.CALCULATE })\n\nexport const inputNumber = (num) => ({ type: actionTypes.NUM, num })\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst BtnFunc = ({ text, className, onClick }) => (\n  <div className={className} onClick={onClick}>\n    {text}\n  </div>\n)\n\nBtnFunc.propTypes = {\n  text: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n}\n\nexport default BtnFunc\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../actions/actions'\nimport BtnFunc from '../components/button'\n\nconst mapDispatchToProps = (dispatch) => ({\n  inputNum: (num) => dispatch(actions.inputNumber(num)),\n  addNum: () => dispatch(actions.addNumber()),\n  subNum: () => dispatch(actions.subNumber()),\n  countNum: () => dispatch(actions.countNumber()),\n  resetNum: () => dispatch(actions.resetNumber()),\n})\nconst ClickBtn = connect(\n  null, // 沒有傳入 mapStateToProps ，所以用 null。\n  mapDispatchToProps\n)(({ inputNum, addNum, subNum, countNum, resetNum }) => (\n  <div>\n    <div className=\"row mt-2\">\n      <div className=\"row_flex\">\n        <BtnFunc\n          text=\"AC\"\n          className=\"circle symbol_grey\"\n          onClick={(e) => {\n            e.preventDefault()\n            resetNum()\n          }}\n        />\n        <BtnFunc\n          text=\"+/-\"\n          className=\"circle symbol_grey\"\n          onClick={(e) => {\n            e.preventDefault()\n            addNum()\n          }}\n        />\n        <BtnFunc\n          text=\"%\"\n          className=\"circle symbol_grey\"\n          onClick={(e) => {\n            e.preventDefault()\n          }}\n        />\n        <BtnFunc\n          text=\"&divide;\"\n          className=\"circle symbol_blue\"\n          onClick={(e) => {\n            e.preventDefault()\n          }}\n        />\n      </div>\n    </div>\n    <div className=\"row mt-2\">\n      <div className=\"row_flex\">\n        <BtnFunc\n          text={7}\n          className=\"circle num\"\n          onClick={(e) => {\n            e.preventDefault()\n            inputNum(7)\n          }}\n        />\n        <BtnFunc\n          text={8}\n          className=\"circle num\"\n          onClick={(e) => {\n            e.preventDefault()\n            inputNum(8)\n          }}\n        />\n        <BtnFunc\n          text={9}\n          className=\"circle num\"\n          onClick={(e) => {\n            e.preventDefault()\n            inputNum(9)\n          }}\n        />\n        <BtnFunc\n          text=\"&times;\"\n          className=\"circle symbol_blue\"\n          onClick={(e) => {\n            e.preventDefault()\n            subNum()\n          }}\n        />\n      </div>\n    </div>\n    <div className=\"row mt-2\">\n      <div className=\"row_flex\">\n        <BtnFunc\n          text={4}\n          className=\"circle num\"\n          onClick={(e) => {\n            e.preventDefault()\n            inputNum(4)\n          }}\n        />\n        <BtnFunc\n          text={5}\n          className=\"circle num\"\n          onClick={(e) => {\n            e.preventDefault()\n            inputNum(5)\n          }}\n        />\n        <BtnFunc\n          text={6}\n          className=\"circle num\"\n          onClick={(e) => {\n            e.preventDefault()\n            inputNum(6)\n          }}\n        />\n        <BtnFunc\n          text=\"&minus;\"\n          className=\"circle symbol_blue\"\n          onClick={(e) => {\n            e.preventDefault()\n            subNum()\n          }}\n        />\n      </div>\n    </div>\n    <div className=\"row mt-2\">\n      <div className=\"row_flex\">\n        <BtnFunc\n          text={1}\n          className=\"circle num\"\n          onClick={(e) => {\n            e.preventDefault()\n            inputNum(1)\n          }}\n        />\n        <BtnFunc\n          text={2}\n          className=\"circle num\"\n          onClick={(e) => {\n            e.preventDefault()\n            inputNum(2)\n          }}\n        />\n        <BtnFunc\n          text={3}\n          className=\"circle num\"\n          onClick={(e) => {\n            e.preventDefault()\n            inputNum(3)\n          }}\n        />\n        <BtnFunc\n          text=\"+\"\n          className=\"circle symbol_blue\"\n          onClick={(e) => {\n            e.preventDefault()\n            addNum()\n          }}\n        />\n      </div>\n    </div>\n    <div className=\"row mt-2\">\n      <div className=\"row_flex\">\n        <BtnFunc\n          text={0}\n          className=\"ellipse num\"\n          onClick={(e) => {\n            e.preventDefault()\n            inputNum(0)\n          }}\n        />\n        <BtnFunc\n          text=\".\"\n          className=\"circle num\"\n          onClick={(e) => {\n            e.preventDefault()\n            inputNum(2)\n          }}\n        />\n        <BtnFunc\n          text=\"=\"\n          className=\"circle symbol_blue\"\n          onClick={(e) => {\n            e.preventDefault()\n            countNum()\n          }}\n        />\n      </div>\n    </div>\n  </div>\n))\n\nexport default ClickBtn\n","import React, { useState, useEffect } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport $ from 'jquery'\nimport { Button } from 'react-bootstrap'\nimport Draggable from 'react-draggable'\nimport ViewNumber from '../containers/viewNumber'\nimport ClickBtn from '../containers/clickBtn'\n//redux\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n//action\nimport {\n  addNumber,\n  subNumber,\n  resetNumber,\n  countNumber,\n  inputNumber,\n} from '../actions/actions'\n//引入自己的css\nimport '../css/home.scss'\n\nfunction Home(props) {\n  //設定按鈕顯示\n  const [device, setDevice] = useState('')\n\n  //偵測視窗顯示文字\n  const handleBtnShow = function () {\n    if (window.innerWidth > 768) {\n      setDevice('Computer')\n    } else if (window.innerWidth > 576) {\n      setDevice('Computer')\n      console.log('computer')\n    } else {\n      setDevice('Mobile')\n    }\n  }\n  useEffect(() => {\n    window.addEventListener('resize', handleBtnShow)\n    handleBtnShow()\n    return () => {\n      window.removeEventListener('resize', handleBtnShow)\n    }\n  }, [])\n\n  //開手機版計算機\n  const handleCalShow = function () {\n    $('.calculator_mobile').toggleClass('d-none')\n    $('.calculator_computer').addClass('d-none')\n  }\n  //關手機版計算機\n  useEffect(() => {\n    $('.home_helf').click(function () {\n      $('.calculator_mobile').addClass('d-none')\n    })\n  }, [])\n\n  //開電腦版計算機\n  const handleComShow = function () {\n    $('.calculator_computer').toggleClass('d-none')\n    $('.calculator_mobile').addClass('d-none')\n  }\n\n  //關電腦版計算機\n  // useEffect(() => {\n  //   $('.home').click(function () {\n  //     $('.calculator_computer').addClass('d-none')\n  //   })\n  // }, [])\n\n  return (\n    <>\n      <div className=\"home\">\n        {device === 'Computer' ? (\n          <Button variant=\"primary\" size=\"lg\" onClick={handleComShow}>\n            {device}\n          </Button>\n        ) : (\n          <Button variant=\"secondary\" size=\"lg\" onClick={handleCalShow}>\n            {device}\n          </Button>\n        )}\n        <Draggable>\n          <div className=\"calculator_computer\">\n            <div className=\"wrapper\">\n              <ViewNumber />\n              <ClickBtn />\n            </div>\n          </div>\n        </Draggable>\n        <div className=\"home_helf\"></div>\n        <div className=\"calculator_mobile d-none\">\n          <div className=\"wrapper\">\n            <ViewNumber />\n            <ClickBtn />\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\nconst mapStateToProps = (store) => {\n  return { calculator: store.calculator }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      addNumber,\n      subNumber,\n      resetNumber,\n      countNumber,\n      inputNumber,\n    },\n    dispatch\n  )\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Home from './pages/Home'\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport calculateReducer from './reducers/reducers'\nimport * as serviceWorker from './serviceWorker'\nimport App from './App'\n//載入react bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '../src/css/home.scss'\nconst store = createStore(calculateReducer)\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}